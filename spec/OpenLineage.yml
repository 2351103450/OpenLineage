openapi: 3.0.2
info:
  title: OpenLineage
  version: 0.0.1
  description: OpenLineage is an open source **lineage and metadata collection API** for the data ecosystem.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /events:
    post:
      summary: Updates the state of a run
      description: Updates a run state for a job.
      operationId: postRunStateUpdate
      tags:
        - OpenLineage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunStateUpdates'
      responses:
        '200':
          description: OK

components:
  schemas:
    RunStateUpdates:
      type: array
      items:
        $ref: '#/components/schemas/RunStateUpdate'

    RunStateUpdate:
      type: object
      properties:
        runId:
          description: the unique identifier for that run
          type: string
          format: uuid
        jobId:
          $ref: '#/components/schemas/JobId'
        transition:
          description: transitions the run state
          type: string #TODO: add enum
          example: 'START|RUNNING|COMPLETE|ABORT|FAIL'
        transitionTime:
          type: string
          format: date-time
        origin:
          $ref: '#/components/schemas/Origin'
        job:
          $ref: '#/components/schemas/Job'
        inputs:
          description: The set of **input** datasets.
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
        outputs:
          description: The set of **output** datasets.
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
        facets:
          description: The run facets.
          type: object
          properties:
            nominalTime:
              $ref: '#/components/schemas/NominalTimeRunFacet'
            parent:
              $ref: '#/components/schemas/ParentRunFacet'
          additionalProperties:
            $ref: '#/components/schemas/CustomFacet'
      required:
        - runId
        - jobId
        - transition
        - transition-time
        - origin

    Job:
      type: object
      properties:
        description:
          description: The description of the job.
          type: string
        facets:
          description: The job facets.
          type: object
          properties:
            sourceCodeLocation:
              $ref: '#/components/schemas/SourceCodeLocationJobFacet'
            sql:
              $ref: '#/components/schemas/SQLJobFacet'
          additionalProperties:
            $ref: '#/components/schemas/CustomFacet'

    Dataset:
      type: object
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        description:
          description: The description of the Dataset.
          type: string
          example: "canonical representation of entity Foo"
        facets:
          description: The facets for this dataset
          type: object
          properties:
            schema:
              $ref: '#/components/schemas/SchemaDatasetFacet'
            dataSource:
              $ref: '#/components/schemas/DatasourceDatasetFacet'
          additionalProperties:
            $ref: '#/components/schemas/CustomFacet'
      required:
        - datasetId

    Origin:
      description: Origin producer of this facet
      type: object
      properties:
        name:
          description: name of the project producing this metadata
          type: string
        version:
          description: version of the project producing this metadata
          type: string
      required:
       - name

    JobId:
      description: The identifier of a job # TODO: should this be a URN?
      type: object
      properties:
        namespace:
          description: The namespace containing that job
          type: string
          example: "my-scheduler-namespace"
        name:
          description: The unique name for that job within that namespace
          type: string
          example: "myjob.mytask"
      required:
       - namespace
       - name

    DatasetId:
      description: The identifier of a dataset # TODO: should this be a URN?
      type: object
      properties:
        namespace:
          description: The namespace containing that dataset
          type: string
          example: "my-datasource-namespace"
        name:
          description: The unique name for that dataset within that namespace
          type: string
          example: "instance.schema.table"
      required:
       - namespace
       - name

# Custom facets
    CustomFacet:
      type: object
      properties:
        origin:
          description: The name of the origin of this custom facet.
          type: string
        version:
          description: The version of this custom facet.
          type: string
      additionalProperties: true
      required:
        - origin

## Run Facets
    NominalTimeRunFacet:
      type: object
      properties:
        nominalStartTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run. AKA the schedule time
          type: string
          format: date-time
        nominalEndTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
          type: string
          format: date-time

    ParentRunFacet:
      description: the id of the parent run and job, iff this run was spawn from an other run (for example, the Dag run scheduling its tasks)
      type: object
      properties:
        runId:
          type: string
          format: uuid
        jobId:
          $ref: '#/components/schemas/JobId'

## Job Facets
    SourceCodeLocationJobFacet:
      type: object
      properties:
        type:
          type: string
          example: git
        url:
          type: string
          format: url

    SQLJobFacet:
      type: object
      properties:
        query:
          type: string
          example: SELECT * FROM foo

## Dataset facets
    SchemaDatasetFacet:
      type: object
      properties:
        fields:
          description: The fields of the table.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the field.
                type: string
                example: column1
              type:
                description: The type of the field.
                type: string
                example: VARCHAR|INT|...
              description:
                description: The description of the field.
                type: string
            required:
              - name
              - type

    DatasourceDatasetFacet:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
